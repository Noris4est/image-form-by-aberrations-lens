function [PSF,r_arr,x,y] = define_user_PSF(dxy)
%% Формирование пользовательской функции рассеяния точки (ФРТ)
%% На входе:
%1. dxy- шаг cетки разбиения ФРТ
%Иначе говоря - шаг между отсчетами в матрице, по умолчанию - мкм.
%% На выходе:
%1. PSF - трехмерный массив. Структурно явл. набором слоев матриц ФРТ.
%2. r_arr - массив, содержит координаты поля, для которых определены слои ФРТ
%Например, матрица ФРТ для координаты r_arr(i) будет PSF(:,:,i)
%3. x,y - коорд. сетка, в кот. заданы слои ФРТ для быстр. постр. графика
%% Пользовательские параметры ФРТ
%Используется корректная с точки зрения ТОЭС аппроксимация ф. Гаусса.
%ФРТ составляется из двух половин гауссойд с разными СКО
%Таким образом моделируется аберрация кома
%Аберрация кома хар. рассогласованием геом. и энерг. центров пятна ФРТ
%При наличии абер. комы ФРТ имеет вытянутость в направлении радиуса-вектора
%При свертке с изобр. наблюдается "заваливание" изображения в направлени...
%... от центра к краю формироемого изображения (если оно центрировано...
%относительно оптической оси ОС.
sigma_across_arr=[1,1];%мкм - СКО поперек радиус-вектору (по умолч. Oy).
sigma_along_arr=[1,4];%мкм - СКО вдоль радиуса-вектора (по умолч. Ox).
r_arr=[0,0.07];%мм координаты точек поля (в плоскости изображений) 
Tr_x=20;%мкм диапазон формирования функции ФРТ по осям x и y
Tr_y=20;%мкм
%% Предварительный расчет
gridx=-Tr_x/2:dxy:Tr_x/2;%задаются разбиения по осям отдельно
gridy=Tr_y/2:-dxy:-Tr_y/2;
[x,y]=meshgrid(gridx,gridy);%формирование координатной сетки
PSF_sample=zeros(length(gridy),length(gridx),length(r_arr));%заготовка
%% Формирование слоев матриц ФРТ 
%цикл по координатам поля (в плоскости изображения)
for i=1:length(r_arr)
    sigma_across=sigma_across_arr(i);%выделение СКО из массива
    sigma_along=sigma_along_arr(i);
    PSF_sample(:,:,i)=exp(-y.^2/sigma_across^2).*(...
        double(x>=0).*exp(-x.^2/sigma_along^2)+...
        +double(x<0).*exp(-x.^2/sigma_across^2));
    %Нормировка sum=1
    PSF_sample(:,:,i)=PSF_sample(:,:,i)/sum(PSF_sample(:,:,i),'all');
end
PSF=PSF_sample;
end

